    <fieldType name="xfacet" class="edu.upenn.library.solrplugins.CaseInsensitiveSortingTextField" omitNorms="true" serializer="edu.upenn.library.solrplugins.URIEscapeSerializer" displayizer="edu.upenn.library.solrplugins.NonFilingPrefixCombiner" payloadHandler="edu.upenn.library.solrplugins.JsonReferencePayloadHandler">
        <analyzer type="index">
            <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
            <tokenizer class="edu.upenn.library.solrplugins.JsonReferencePayloadTokenizerFactory"/>
            <filter class="edu.upenn.library.solrplugins.tokentype.TokenTypeSplitFilterFactory" includeTypes="filing" outputType="normalized"/>
            <filter class="edu.upenn.library.solrplugins.tokentype.TokenTypeProcessFilterFactory" includeTypes="normalized" _class="solr.ICUFoldingFilterFactory"/>
            <filter class="edu.upenn.library.solrplugins.tokentype.TokenTypeProcessFilterFactory" includeTypes="normalized" _class="solr.PatternReplaceFilterFactory" _pattern=" &amp; " _replacement=" and "/>
            <filter class="edu.upenn.library.solrplugins.tokentype.TokenTypeProcessFilterFactory" includeTypes="normalized" _class="solr.PatternReplaceFilterFactory" _pattern="(\p{IsAlphabetic})['’](\p{IsAlphabetic})" _replacement="$1$2"/>
            <filter class="edu.upenn.library.solrplugins.tokentype.TokenTypeProcessFilterFactory" includeTypes="normalized" _class="solr.PatternReplaceFilterFactory" _pattern="[^\p{IsAlphabetic}\p{Digit}]+" _replacement=" "/>
            <filter class="edu.upenn.library.solrplugins.tokentype.TokenTypeProcessFilterFactory" includeTypes="normalized" _class="solr.TrimFilterFactory"/>
            <filter class="edu.upenn.library.solrplugins.tokentype.TokenTypeProcessFilterFactory" includeTypes="normalized" _class="solr.WordDelimiterFilterFactory" _generateWordParts="0" _generateNumberParts="0" _catenateWords="1" _catenateNumbers="1" _catenateAll="1" _splitOnCaseChange="0" _preserveOriginal="0" _stemEnglishPossessive="0" _types="wdftypes-headingSort.txt"/>
            <filter class="edu.upenn.library.solrplugins.tokentype.TokenTypeJoinFilterFactory" inputTypes="normalized,filing,prefix" outputType="indexed" typeForPayload="normalized" outputComponents="false"/>
        </analyzer>
        <analyzer type="query">
            <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt"/>
            <tokenizer class="edu.upenn.library.solrplugins.JsonReferencePayloadTokenizerFactory"/>
            <filter class="edu.upenn.library.solrplugins.tokentype.TokenTypeSplitFilterFactory" includeTypes="filing" outputType="normalized"/>
            <filter class="edu.upenn.library.solrplugins.tokentype.TokenTypeProcessFilterFactory" includeTypes="normalized" _class="solr.ICUFoldingFilterFactory"/>
            <filter class="edu.upenn.library.solrplugins.tokentype.TokenTypeProcessFilterFactory" includeTypes="normalized" _class="solr.PatternReplaceFilterFactory" _pattern=" &amp; " _replacement=" and "/>
            <filter class="edu.upenn.library.solrplugins.tokentype.TokenTypeProcessFilterFactory" includeTypes="normalized" _class="solr.PatternReplaceFilterFactory" _pattern="(\p{IsAlphabetic})['’](\p{IsAlphabetic})" _replacement="$1$2"/>
            <filter class="edu.upenn.library.solrplugins.tokentype.TokenTypeProcessFilterFactory" includeTypes="normalized" _class="solr.PatternReplaceFilterFactory" _pattern="[^\p{IsAlphabetic}\p{Digit}]+" _replacement=" "/>
            <filter class="edu.upenn.library.solrplugins.tokentype.TokenTypeProcessFilterFactory" includeTypes="normalized" _class="solr.TrimFilterFactory"/>
            <filter class="edu.upenn.library.solrplugins.tokentype.TokenTypeProcessFilterFactory" includeTypes="normalized" _class="solr.WordDelimiterFilterFactory" _generateWordParts="0" _generateNumberParts="0" _catenateWords="1" _catenateNumbers="1" _catenateAll="1" _splitOnCaseChange="0" _preserveOriginal="0" _stemEnglishPossessive="0" _types="wdftypes-headingSort.txt"/>
            <filter class="edu.upenn.library.solrplugins.tokentype.TokenTypeJoinFilterFactory" inputTypes="normalized,filing,prefix" outputType="indexed" typeForPayload="normalized" outputComponents="true"/>
        </analyzer>
    </fieldType>
